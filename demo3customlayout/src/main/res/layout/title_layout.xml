<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
              android:orientation="horizontal"
              android:layout_width="match_parent"
              android:layout_height="wrap_content">

    <Button android:id="@+id/titleBack"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_gravity="center"
            android:layout_margin="5dp"
            android:text="Back"/>

    <TextView android:id="@+id/titleText"
              android:layout_width="0dp"
              android:layout_height="wrap_content"
              android:layout_gravity="center"
              android:layout_weight="1"
              android:gravity="center"
              android:text="Title Text"
              android:textSize="29sp"/>

    <Button android:id="@+id/titleEdit"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_gravity="center"
            android:layout_margin="5dp"
            android:text="Edit"/>

</LinearLayout>

<!--        android:layout_gravity： 指示此控件相对于父控件的排列方式， 作用于控件-->
<!--        android:gravity： 指示此控件内部属性排列方式，作用于内部属性（如TextView的此属性设置的是android:text具体文本如何展示的）-->
<!--        android:layout_weight： 宽度权重，如上文件， 在水平线上，除去无权重控件占用空间， 其余控件被按权重分配给各组件。（此控件权重/控件权重和）*可用总空间-->
<!--        这里设定了 horizontal水平布局，此时控件会在一个水平线上依次排列-->
<!--        titleBack 设定了高宽都是大小自适应（仅包含住文字），center表示titleBack控件居中-->
<!--        titleText 高度自适应，宽度为0，宽度权重为1 ， 此时两个button无权重，只有titleText存在权重， 则titleText会占用除无权重组件占用外剩余的所有空间。android:gravity="center"指示 文字居中-->
<!--            （n个组件，m个无权重， 则剩余n-m个根据权重分配剩余空间）-->
